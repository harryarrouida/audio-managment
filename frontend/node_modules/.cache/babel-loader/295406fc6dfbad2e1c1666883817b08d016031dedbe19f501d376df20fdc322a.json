{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stripSensitiveLiterals = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction stripSensitiveLiterals(ast, options = {\n  hideListAndObjectLiterals: false\n}) {\n  const listAndObjectVisitorIfEnabled = options.hideListAndObjectLiterals ? {\n    ListValue(node) {\n      return {\n        ...node,\n        values: []\n      };\n    },\n    ObjectValue(node) {\n      return {\n        ...node,\n        fields: []\n      };\n    }\n  } : {};\n  return (0, graphql_1.visit)(ast, {\n    IntValue(node) {\n      return {\n        ...node,\n        value: \"0\"\n      };\n    },\n    FloatValue(node) {\n      return {\n        ...node,\n        value: \"0\"\n      };\n    },\n    StringValue(node) {\n      return {\n        ...node,\n        value: \"\",\n        block: false\n      };\n    },\n    ...listAndObjectVisitorIfEnabled\n  });\n}\nexports.stripSensitiveLiterals = stripSensitiveLiterals;","map":{"version":3,"names":["graphql_1","require","stripSensitiveLiterals","ast","options","hideListAndObjectLiterals","listAndObjectVisitorIfEnabled","ListValue","node","values","ObjectValue","fields","visit","IntValue","value","FloatValue","StringValue","block","exports"],"sources":["C:\\Users\\Hamza Arrouida\\Desktop\\PROJECTS\\SNRT\\audio-managment-v2 [enhanced]\\node_modules\\@apollo\\utils.stripsensitiveliterals\\src\\index.ts"],"sourcesContent":["import type {\n  ASTVisitor,\n  DocumentNode,\n  FloatValueNode,\n  IntValueNode,\n  ListValueNode,\n  ObjectValueNode,\n  StringValueNode,\n} from \"graphql\";\nimport { visit } from \"graphql\";\n\n// Hide sensitive string and numeric literals. Optionally hide list and object literals with the option `hideListAndObjectLiterals: true`.\nexport function stripSensitiveLiterals(\n  ast: DocumentNode,\n  options: { hideListAndObjectLiterals?: boolean } = {\n    hideListAndObjectLiterals: false,\n  },\n): DocumentNode {\n  const listAndObjectVisitorIfEnabled: ASTVisitor =\n    options.hideListAndObjectLiterals\n      ? {\n          ListValue(node: ListValueNode): ListValueNode {\n            return { ...node, values: [] };\n          },\n          ObjectValue(node: ObjectValueNode): ObjectValueNode {\n            return { ...node, fields: [] };\n          },\n        }\n      : {};\n\n  return visit(ast, {\n    IntValue(node): IntValueNode {\n      return { ...node, value: \"0\" };\n    },\n    FloatValue(node): FloatValueNode {\n      return { ...node, value: \"0\" };\n    },\n    StringValue(node): StringValueNode {\n      return { ...node, value: \"\", block: false };\n    },\n    ...listAndObjectVisitorIfEnabled,\n  });\n}\n"],"mappings":";;;;;;AASA,MAAAA,SAAA,GAAAC,OAAA;AAGA,SAAgBC,sBAAsBA,CACpCC,GAAiB,EACjBC,OAAA,GAAmD;EACjDC,yBAAyB,EAAE;CAC5B;EAED,MAAMC,6BAA6B,GACjCF,OAAO,CAACC,yBAAyB,GAC7B;IACEE,SAASA,CAACC,IAAmB;MAC3B,OAAO;QAAE,GAAGA,IAAI;QAAEC,MAAM,EAAE;MAAE,CAAE;IAChC,CAAC;IACDC,WAAWA,CAACF,IAAqB;MAC/B,OAAO;QAAE,GAAGA,IAAI;QAAEG,MAAM,EAAE;MAAE,CAAE;IAChC;GACD,GACD,EAAE;EAER,OAAO,IAAAX,SAAA,CAAAY,KAAK,EAACT,GAAG,EAAE;IAChBU,QAAQA,CAACL,IAAI;MACX,OAAO;QAAE,GAAGA,IAAI;QAAEM,KAAK,EAAE;MAAG,CAAE;IAChC,CAAC;IACDC,UAAUA,CAACP,IAAI;MACb,OAAO;QAAE,GAAGA,IAAI;QAAEM,KAAK,EAAE;MAAG,CAAE;IAChC,CAAC;IACDE,WAAWA,CAACR,IAAI;MACd,OAAO;QAAE,GAAGA,IAAI;QAAEM,KAAK,EAAE,EAAE;QAAEG,KAAK,EAAE;MAAK,CAAE;IAC7C,CAAC;IACD,GAAGX;GACJ,CAAC;AACJ;AA9BAY,OAAA,CAAAhB,sBAAA,GAAAA,sBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}